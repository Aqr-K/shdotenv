#!/bin/sh

set -eu

version() { echo 0.4.0; }

usage() {
  printf '%s\n' "Usage: shdotenv [OPTION]... [--] [COMMAND [ARG]...]" "" \
    "  -d, --dialect     Specify the .env dialect [default: posix]" \
    "                      (posix, ruby, node, python, php, go, docker)" \
    "  -e, --env         Location of the .env file [default: .env]" \
    "                    Multiple -e options are allowed" \
    "      --overload    Overload predefined environment variables" \
    "  -n, --noexport    Do not export keys without export prefix" \
    "  -k, --keyonly     Output only variable names" \
    "  -q, --quiet       Suppress all output" \
    "  -v, --version     Show the version and exit" \
    "  -h, --help        Show this message and exit"
}

abort() { echo "$@" >&2 && exit 1; }

parse_options() {
  while [ $# -gt 0 ]; do
    case $1 in
      -d | --dialect)
        [ $# -gt 1 ] || abort "Error: $1 option requires an argument"
        shift
        _shdotenv_pos=$((_shdotenv_pos + 1))
        _shdotenv_dialect="$1"
        ;;
      -e | --env)
        [ $# -gt 1 ] || abort "Error: $1 option requires an argument"
        shift
        _shdotenv_pos=$((_shdotenv_pos + 1))
        _shdotenv_envfiles="$_shdotenv_envfiles \"\${$_shdotenv_pos}\""
        ;;
      --overload) _shdotenv_overload=1 ;;
      -n | --noexport) _shdotenv_allexport='' ;;
      -k | --keyonly) _shdotenv_keyonly=1 ;;
      -q | --quiet) _shdotenv_quiet=1 ;;
      -v | --version) version && exit 0 ;;
      -h | --help) usage && exit 0 ;;
      --) _shdotenv_pos=$((_shdotenv_pos + 1)) && break ;;
      -*) abort "Unknown option: $1" ;;
      *) break ;;
    esac
    shift
    _shdotenv_pos=$((_shdotenv_pos + 1))
  done
}

exec_awk() {
  eval "set -- ${_shdotenv_envfiles:-.env}"
  set -- "$_shdotenv_parser" "$@"
  [ "$_shdotenv_dialect" ] && set -- -v DIALECT="$_shdotenv_dialect" "$@"
  [ "$_shdotenv_overload" ] && set -- -v OVERLOAD="$_shdotenv_overload" "$@"
  [ "$_shdotenv_allexport" ] && set -- -v ALLEXPORT="$_shdotenv_allexport" "$@"
  [ "$_shdotenv_keyonly" ] && set -- -v KEYONLY="$_shdotenv_keyonly" "$@"
  "${SHDOTENV_AWK:-awk}" "$@"
}

eval_env() {
  eval "set --; $1"
}

_shdotenv_dialect='' _shdotenv_envfiles='' _shdotenv_overload=''
_shdotenv_allexport=1 _shdotenv_keyonly='' _shdotenv_quiet='' _shdotenv_pos=1
_shdotenv_parser=$(cat src/parser.awk) # @INCLUDE-FILE

parse_options "$@"

if [ $(($# - _shdotenv_pos + 1)) -eq 0 ] || [ "$_shdotenv_keyonly" ]; then
  [ "$_shdotenv_quiet" ] && exec >/dev/null
  exec_awk "$@"
else
  _shdotenv_env=$(exec_awk "$@")
  shift $((_shdotenv_pos - 1))
  set -- "$_shdotenv_env" "$@"
  unset _shdotenv_pos _shdotenv_parser _shdotenv_env \
    _shdotenv_dialect _shdotenv_envfiles _shdotenv_overload \
    _shdotenv_allexport _shdotenv_keyonly _shdotenv_quiet
  eval_env "$1"
  shift
  exec "$@"
fi
